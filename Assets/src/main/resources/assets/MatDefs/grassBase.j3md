MaterialDef Grass {

    MaterialParameters {
        
        //Fading parameters (don't set these manually).
        Float FadeEnd
        Float FadeRange
        Boolean FadeEnabled
        
        //Is the grass swaying or not?
        Boolean Swaying
        //The wind vector (determines direction and amplitude of the swaying function).
        Vector2 Wind
        //Combined vector for various fading data.
        //x = The swaying frequency
        //y = The swaying variation (how the offset varies between patches)
        //z = Maximum swaying distance (grass beyond this distance does not move).
        Vector3 SwayData

        //Use lighting
        Boolean VertexLighting

        //Use vertex colors (requires a colormap provided to the grassloader).
        Boolean VertexColors

        //Use grass self-shadowing.
        Boolean SelfShadowing

        //The texture
        Texture2D ColorMap
        //The perlin noise for stipple fading.
        Texture2D AlphaNoiseMap

        //When texture alpha is below this value, the pixel is discarded
        Float AlphaThreshold
        
        //Used internally.
        Int NumLights
    }

    Technique {

        LightMode SinglePass

        VertexShader GLSL100:   Shaders/Grass/Grass.vert
        FragmentShader GLSL100: Shaders/Grass/Grass.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldMatrix
            CameraPosition
            Time
        }

        Defines {
            SWAYING : Swaying
            FADE_ENABLED : FadeEnabled
            VERTEX_LIGHTING : VertexLighting
            VERTEX_COLORS : VertexColors
            SELF_SHADOWING : SelfShadowing
            NUM_LIGHTS : NumLights
        }
    }

    Technique PreShadow {

        VertexShader GLSL100 :   Shaders/PSSM/GrassPreShadow.vert
        FragmentShader GLSL100 : Shaders/PSSM/GrassPreShadow.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            WorldMatrix
            CameraPosition
        }

        Defines {
            SWAYING : Swaying
            FADE_ENABLED : FadeEnabled
        }

        RenderState {
            FaceCull Off
            DepthTest On
            DepthWrite On
            //PolyOffset 5 0
            ColorWrite Off
        }

    }

  Technique PreNormalPass {

        VertexShader GLSL100 :   Common/MatDefs/SSAO/normal.vert
        FragmentShader GLSL100 : Common/MatDefs/SSAO/normal.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            NormalMatrix
        }

        Defines {
            SWAYING : Swaying
            FADE_ENABLED : FadeEnabled
        }

        RenderState {

        }

    }

}

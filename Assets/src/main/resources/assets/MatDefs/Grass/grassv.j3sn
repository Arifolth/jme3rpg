ShaderNodesDefinitions {
    ShaderNodeDefinition grassv {
        Type: Vertex
        Shader GLSL100: MatDefs/Grass/grass.vert
        Documentation {
            This Node is responsible for computing vertex position in projection space.
            It also can pass texture coordinates 1 & 2, and vertexColor to the frgment shader as varying (or inputs for glsl >=1.3)                   
            @input modelPosition the vertex position in model space (usually assigned with Attr.inPosition or Global.position)
            @input projectionMatrix the Projection matrix
            @input modelNormal the model normal
            @input cameraDirection the camera eye vector
            @input viewMatrix the model view  matrix
            @input cameraPosition the camera position
            @input texCoord1 The first texture coordinates of the vertex (usually assigned with Attr.inTexCoord)
            @input texCoord2 The data texture Coord
            @input texCoord3 The data texture Coord
            @input worldMatrix the world Matrix
            @output minX
            @output texSize
            @output projPosition Position of the vertex in projection space.(usually assigned to Global.position)
            @output vec2 texCoord1 The first texture coordinates of the vertex (output as a varying)
            @output float camDist Distance to the Camera
            @output colorToMix the color to mix
            @output diffuseLight The diffuse light
        }                
        Input{
            vec3 modelPosition  
            mat4 projectionMatrix
            vec3 modelNormal
            vec3 cameraDirection
            mat4 viewMatrix
            vec3 cameraPosition
            vec2 texCoord1
            vec2 texCoord2
            vec2 texCoord3
            mat4 worldMatrix
        }
        Output{
            float minX
            float texSize
            float colorToMix
            vec4 projPosition
            vec2 texCoord1
            float camDist
            vec3 diffuseLight
        }
    }
}
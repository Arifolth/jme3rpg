MaterialDef Layered {

    MaterialParameters {
        Color Color : Color
        Float Layer
        Float Length
        Float MaskScale
        Float GrassTexScale
        Float Time
        Float WaveSpeed
        Float WaveSize
        Float GrassDistance
        Texture2D GrassMask
        Texture2D GrassTexture
        Texture2D AlphaMap
        Texture3D ThreeDTex
        Boolean Wave
        Boolean Fur
        Boolean FancyLighting
    }

    Technique {

        LightMode MultiPass

        VertexShader GLSL130:   MatDefs/Layered.vert
        FragmentShader GLSL130: MatDefs/Layered.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            NormalMatrix
            ViewMatrix
            CameraPosition
            WorldMatrix
        }

        Defines {
            WAVE : Wave
            ALPHAMAP : AlphaMap
            FUR : Fur
            THREEDTEX : ThreeDTex
        }

        RenderState {
            DepthTest On
            DepthWrite Off
        }
    }

    Technique PreShadow {

        VertexShader GLSL100 :   Common/MatDefs/Shadow/PreShadow.vert
        FragmentShader GLSL100 : Common/MatDefs/Shadow/PreShadow.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
        }

        Defines {
            DIFFUSEMAP_ALPHA : DiffuseMap
        }

        RenderState {
            FaceCull Off
            DepthTest On
            DepthWrite On
            PolyOffset 5 0
            ColorWrite Off
        }

    }

  Technique PreNormalPass {

        VertexShader GLSL100 :   Common/MatDefs/SSAO/normal.vert
        FragmentShader GLSL100 : Common/MatDefs/SSAO/normal.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            NormalMatrix
        }

        Defines {
            DIFFUSEMAP_ALPHA : DiffuseMap
        }

        RenderState {

        }

    }

    Technique GBuf {

        VertexShader GLSL100:   Common/MatDefs/Light/GBuf.vert
        FragmentShader GLSL100: Common/MatDefs/Light/GBuf.frag

        WorldParameters {
            WorldViewProjectionMatrix
            NormalMatrix
            WorldViewMatrix
            WorldMatrix
        }

        Defines {
            VERTEX_COLOR : UseVertexColor
            MATERIAL_COLORS : UseMaterialColors
            V_TANGENT : VTangent
            MINNAERT  : Minnaert
            WARDISO   : WardIso

            DIFFUSEMAP : DiffuseMap
            NORMALMAP : NormalMap
            SPECULARMAP : SpecularMap
            PARALLAXMAP : ParallaxMap
        }
    }

    Technique FixedFunc {
        LightMode FixedPipeline
    }

}
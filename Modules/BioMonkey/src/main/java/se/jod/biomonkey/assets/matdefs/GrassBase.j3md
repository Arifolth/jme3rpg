MaterialDef GrassBase {

    MaterialParameters {
        
        //Fading parameters (don't set these manually).
        Float FadeEnd
        Float FadeRange
        Boolean HighQualityFading
        
        //Is the grass swaying or not?
        Boolean Swaying
        //The wind vector (determines direction and amplitude of the swaying function).
        Vector2 Wind
        //Combined vector for various fading data.
        //x = The swaying frequency
        //y = The swaying variation (how the offset varies between patches)
        //z = The swaying amplitude (strength of the animation)
        Vector3 SwayData

        // Fog
        Boolean Fog
        Vector4 FogParams
        Vector3 SunDir
        Color FogColor
        Color FogSunColor

        //Lighting
        Boolean Lighting
        Boolean EnableSpotlights

        //The texture
        Texture2D DiffuseMap
        Texture2D NormalMap

        //The perlin noise for stipple fading.
        Texture2D AlphaNoiseMap
        
        //Used internally.
        Int NumLights

        Float AlphaDiscardThreshold : 0.3

        //shadows
        Int FilterMode
        Boolean HardwareShadows

        Texture2D ShadowMap0
        Texture2D ShadowMap1
        Texture2D ShadowMap2
        Texture2D ShadowMap3
        
        Float ShadowIntensity
        Vector4 Splits

        Matrix4 LightViewProjectionMatrix0
        Matrix4 LightViewProjectionMatrix1
        Matrix4 LightViewProjectionMatrix2
        Matrix4 LightViewProjectionMatrix3

        Float PCFEdge
        Float ShadowMapSize
    }

    Technique {

        LightMode SinglePass

        VertexShader GLSL100:   se/jod/biomonkey/assets/shaders/grass/Grass.vert
        FragmentShader GLSL100: se/jod/biomonkey/assets/shaders/grass/Grass.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldMatrix
            WorldViewMatrix
            ViewMatrix
            CameraPosition
            Time
        }

        Defines {
            SWAYING : Swaying
            HQ_FADING : HighQualityFading
            LIGHTING : Lighting
            NORMALMAP : NormalMap
            NUM_LIGHTS : NumLights
            ENABLE_SPOTLIGHTS : EnableSpotlights
            FOG : Fog
        }

    }

Technique PreShadow {

        VertexShader GLSL100 :   se/jod/biomonkey/assets/shaders/grass/GrassPreShadowPSSM.vert
        FragmentShader GLSL100 : se/jod/biomonkey/assets/shaders/grass/GrassPreShadowPSSM.frag

        WorldParameters {
            WorldViewProjectionMatrix
            Time
        }

        Defines {
            SWAYING : Swaying
            HQ_FADING : HighQualityFading
        }

        RenderState {
            FaceCull Off
            DepthTest On
            DepthWrite On
            PolyOffset 5 0
            ColorWrite Off
        }
    }


    Technique PostShadow15{
        VertexShader GLSL150:   Common/MatDefs/Shadow/PostShadowPSSM.vert
        FragmentShader GLSL150: Common/MatDefs/Shadow/PostShadowPSSM15.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldMatrix
        }

        Defines {
            HARDWARE_SHADOWS : HardwareShadows
            FILTER_MODE : FilterMode
            PCFEDGE : PCFEdge
            DISCARD_ALPHA : AlphaDiscardThreshold
            COLOR_MAP : ColorMap
            SHADOWMAP_SIZE : ShadowMapSize
        }

        ForcedRenderState {
            FaceCull Off
            Blend Modulate
            DepthWrite Off                 
            PolyOffset -0.1 0
        }
    }

    Technique PostShadow{
        VertexShader GLSL100:   Common/MatDefs/Shadow/PostShadowPSSM.vert
        FragmentShader GLSL100: Common/MatDefs/Shadow/PostShadowPSSM.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldMatrix
        }

        Defines {
            HARDWARE_SHADOWS : HardwareShadows
            FILTER_MODE : FilterMode
            PCFEDGE : PCFEdge
            DISCARD_ALPHA : AlphaDiscardThreshold
            COLOR_MAP : ColorMap
            SHADOWMAP_SIZE : ShadowMapSize
        }

        ForcedRenderState {
            FaceCull Off
            Blend Modulate
            DepthWrite Off   
            PolyOffset -0.1 0  
        }
    }

  Technique PreNormalPass {

        VertexShader GLSL100 :   Common/MatDefs/SSAO/normal.vert
        FragmentShader GLSL100 : Common/MatDefs/SSAO/normal.frag

        WorldParameters {
            WorldViewProjectionMatrix
            WorldViewMatrix
            NormalMatrix
        }

        Defines {
            DIFFUSEMAP_ALPHA : DiffuseMap
        }

        RenderState {

        }

    }

    Technique GBuf {

        VertexShader GLSL100:   Common/MatDefs/Light/GBuf.vert
        FragmentShader GLSL100: Common/MatDefs/Light/GBuf.frag

        WorldParameters {
            WorldViewProjectionMatrix
            NormalMatrix
            WorldViewMatrix
            WorldMatrix
        }

        Defines {
            VERTEX_COLOR : UseVertexColor
            MATERIAL_COLORS : UseMaterialColors
            V_TANGENT : VTangent
            MINNAERT  : Minnaert
            WARDISO   : WardIso

            DIFFUSEMAP : DiffuseMap
            NORMALMAP : NormalMap
            SPECULARMAP : SpecularMap
            PARALLAXMAP : ParallaxMap
        }
    }

    Technique {
        LightMode FixedPipeline
    }

    Technique Glow {

        VertexShader GLSL100:   Common/MatDefs/Misc/Unshaded.vert
        FragmentShader GLSL100: Common/MatDefs/Light/Glow.frag

        WorldParameters {
            WorldViewProjectionMatrix
        }

        Defines {
            NEED_TEXCOORD1
            HAS_GLOWMAP : GlowMap
            HAS_GLOWCOLOR : GlowColor
        }
    }
}
